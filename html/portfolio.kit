<!DOCTYPE html>
<html lang="pl">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://kit.fontawesome.com/4f17386bac.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="../dist/css/Mobile.min.css">
</head>

<body data-body="portfolio">

    <!-- @include 'nav.kit' -->
    <main>
        <section class="portfolio-mobile">

            <div class="portfolio-mobile__contener">
                <div class="portfolio-mobile__contener-box">
                    <button class="portfolio-mobile__contener-box-button">
                        <p class="portfolio-mobile__contener-box-button-text">BowlingCenter</p>
                    </button>
                    <div class="portfolio-mobile__contener-box-info">
                        <p class="portfolio-mobile__contener-box-info-text">
                            Jest to m√≥j pierwszy powa≈ºny projekt. Strona fimry produkujƒÖcej krƒôgielnie, pisana od
                            zera.<br> Nauczy≈Çem siƒô naprawde du≈ºo
                        <ul>
                            <li>Umieszanie Komponent√≥w na stronie</li>
                            <li>Dob√≥r rozdzielczo≈õci grafiki</li>
                            <li>Kontakt z klientem</li>
                            <li>Odpowiedznie u≈ºycie JavaScriptu</li>
                        </ul>
                        </p>
                        <p class="portfolio-mobile__contener-box-info-text">Zapraszam na Live
                            <a class="link" href="https://hayssor.github.io/BowlingCenter/">Live</a><br>

                            GitHuba z tym Repozytorum
                            <a class="link" href="https://github.com/HaySsor/BowlingCenter">Rep</a>
                        </p>

                    </div>
                </div>
                <div class="portfolio-mobile__contener-box">
                    <button class="portfolio-mobile__contener-box-button">
                        <p class="portfolio-mobile__contener-box-button-text">JavaScript-Learn
                        </p>
                    </button>
                    <div class="portfolio-mobile__contener-box-info">
                        <p class="portfolio-mobile__contener-box-info-text">Lorem ipsum dolor sit amet, consectetur
                            adipisicing elit. Voluptatibus eaque amet veritatis cum facilis quaerat, quae, blanditiis
                            laborum voluptates voluptatum officia doloremque accusamus ad, provident dolore placeat
                            aliquam rem est.</p>
                    </div>
                </div>
                <div class="portfolio-mobile__contener-box">
                    <button class="portfolio-mobile__contener-box-button">
                        <p class="portfolio-mobile__contener-box-button-text">Przeszukaj listƒô</p>
                    </button>
                    <div class="portfolio-mobile__contener-box-info">
                        <p class="portfolio-mobile__contener-box-info-text">Lorem ipsum dolor sit amet, consectetur
                            adipisicing elit. Voluptatibus eaque amet veritatis cum facilis quaerat, quae, blanditiis
                            laborum voluptates voluptatum officia doloremque accusamus ad, provident dolore placeat
                            aliquam rem est.</p>
                    </div>
                </div>
                <div class="portfolio-mobile__contener-box">
                    <button class="portfolio-mobile__contener-box-button">
                        <p class="portfolio-mobile__contener-box-button-text">Caesar-cipher</p>
                    </button>
                    <div class="portfolio-mobile__contener-box-info">
                        <p class="portfolio-mobile__contener-box-info-text">Lorem ipsum dolor sit amet, consectetur
                            adipisicing elit. Voluptatibus eaque amet veritatis cum facilis quaerat, quae, blanditiis
                            laborum voluptates voluptatum officia doloremque accusamus ad, provident dolore placeat
                            aliquam rem est.</p>
                    </div>
                </div>
            </div>
        </section>
        <selction class="portfolio-desktop">
            <div class="wrapper">
                <div class="portfolio-desktop__container">

                    <h3 class="portfolio-desktop__container-title">"Emoji"</h3>
                    <div class="portfolio-desktop__container-box">
                        <div class="portfolio-desktop__container-box-code">
                            <div class="portfolio-desktop__container-box-code-widow">
                                <div class="portfolio-desktop__container-box-code-widow-buttons">
                                    <button data-exit
                                        class="portfolio-desktop__container-box-code-widow-buttons-exit"></button>
                                    <button data-full
                                        class="portfolio-desktop__container-box-code-widow-buttons-full"></button>
                                    <button data-mini
                                        class="portfolio-desktop__container-box-code-widow-buttons-mini"></button>
                                </div>
                                <div data-code class="portfolio-desktop__container-box-code-widow-text">
                                    <p> <span class="token class">const</span> emojiMappings = { <br>
                                        <span class="token space tag">stop</span>:"üö´",<br>
                                        <span class="token space tag">gwiazda</span>:"‚≠êÔ∏è",<br>
                                        <span class="token space tag">samoch√≥d</span>:"üèé",<br>
                                        <span class="token space tag">budujƒô</span>:"üß±",<br>
                                        <span class="token space tag">budzik</span>:"‚è∞",
                                        <br>
                                        }
                                        <br>
                                        <br>
                                        <span class="token function">function</span> <span
                                            class="token class">useEmoji</span>(input) {
                                        <br>
                                        <span class="token space class">const</span> arrayInput = input.<span
                                            class="token function">split</span>(" ")<br>
                                        <span class="token space class">const</span> emojiMappingsKeys = <span
                                            class="token tag">Object</span>.<span
                                            class="token function">keys</span>(emojiMappings)<br>
                                        <span class="token space class">let </span>endSing = ""<br>
                                        <span class="token space">arrayInput</span>.<span
                                            class="token function">forEach</span>((word, id) <span class="token tag"> =>
                                        </span>{
                                        <br>
                                        <span class="token space-double class">const</span> lastChar = word.<span
                                            class="token function">slice</span>(-1)<br>
                                        <span class="token space-double variable">if</span> (lastChar === '.') {<br>
                                        <span class="space-triple">endSing</span> = '.' <br>
                                        <span class="space-triple">word</span> = word.<span
                                            class="token function">substr</span>(word[0], word.<span
                                            class="token function">length</span> - 1)
                                        <br>
                                        <span class="space-double">}</span><br>
                                        <span class="token space-double variable">if</span> ( emojiMappingsKeys.<span
                                            class="token function">indexOf</span>(word.<span
                                            class="token function">toLowerCase</span>()) !== 1 ) { <br>
                                        <span class="token space-triple ">arrayInput</span>[ id ] =
                                        emojiMappings[word.<span class="token function">toLowerCase</span>()] + endSing
                                        <br>
                                        <span class="space-double">}</span>
                                        <br>
                                        <span class="space">})</span><br>

                                        <span class="token space">return</span> arrayInput.<span
                                            class="token function">join</span>( ' ' )

                                        <br>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="portfolio-desktop__container-box-text">
                            <p class="portfolio-desktop__container-box-text-info"> Cel zadania<br>

                                Zaimplementuj funkcjƒô "useEmoji", kt√≥ra zastƒÖpi wszystkie s≈Çowa danego parametru zgodnie
                                z mapowaniem z obiektu "emojiMappings";</p>
                            <p class="portfolio-desktop__container-box-text-info">Przyk≈Çad:
                                useEmoji('Takiemu zachowaniu m√≥wiƒô stop i to mocny stop!') // => 'Takiemu zachowaniu
                                m√≥wiƒô üö´ i to mocny üö´!'
                                useEmoji('Jadƒô po nowy samoch√≥d :D') // => 'Jadƒô po nowy üèé :D'</p>
                        </div>
                    </div>
                    <h3 class="portfolio-desktop__container-title">"Policz S≈Çowa"</h3>
                    <div class="portfolio-desktop__container-box">
                        <div class="portfolio-desktop__container-box-code">
                            <div
                                class="portfolio-desktop__container-box-code-widow portfolio-desktop__container-box-code-widow--small">
                                <div class="portfolio-desktop__container-box-code-widow-buttons">
                                    <button data-exit
                                        class="portfolio-desktop__container-box-code-widow-buttons-exit"></button>
                                    <button data-full
                                        class="portfolio-desktop__container-box-code-widow-buttons-full"></button>
                                    <button data-mini
                                        class="portfolio-desktop__container-box-code-widow-buttons-mini"></button>
                                </div>
                                <div class="portfolio-desktop__container-box-code-widow-text">
                                    <p>
                                        <span class="token function">function</span> <span
                                            class="token class">countWords</span>(sentence) {
                                        <br>
                                        <span class="token space class">const</span> regNumberLetter = <span
                                            class="token tag">/\w+/g</span>
                                        <br>
                                        <span class="token space class">const</span> result = {}
                                        <br>
                                        <span class="token space class">const</span> wordArray = sentence.<span
                                            class="token function">toLowerCase</span>().<span
                                            class="token function">match</span>(reg)
                                        <br>
                                        <span class="token space">wordArray</span>.<span
                                            class="token function">forEach</span>( word <span class="token tag"> =>
                                        </span>{
                                        <br>
                                        <span class="token space-double variable">if</span> ( ( result[word] =
                                        result[word] ) ) {
                                        <br>
                                        <span class="token space-triple"> result[word] += 1</span>
                                        <br>
                                        <span class="token space-double">}</span> <span class="token variable"> else
                                        </span>{
                                        <br>
                                        <span class="token space-triple"> result[word] = 1</span>
                                        <br>
                                        <span class="token space-double">}</span>
                                        <br>
                                        <span class="token space"></span>})
                                        <br>
                                        <span class="token space variable">return</span> result
                                        <br>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="portfolio-desktop__container-box-text">
                            <p class="portfolio-desktop__container-box-text-info"> Cel zadania<br>

                                OtrzymujƒÖc zdanie jako parametr wej≈õciowy, zwr√≥ƒá obiekt, kt√≥ry bƒôdzie zawiera≈Ç liczbƒô
                                wystƒÖpie≈Ñ ka≈ºdego s≈Çowa w zdaniu. Zignoruj to czy s≈Çowo jest napisane z du≈ºej czy z
                                ma≈Çej litery.</p>
                            <p class="portfolio-desktop__container-box-text-info">Przyk≈Çad:
                                <br>
                                countWords("Nauka JavaScript z kursem Opanuj JavaScript to frajda"); // => {
                                <br>
                                nauka: 1,
                                <br>
                                javascript: 2,
                                <br>
                                z: 1,
                                <br>
                                kursem: 1,
                                <br>
                                opanuj: 1,
                                <br>
                                to: 1,
                                <br>
                                frajda: 1
                                <br>
                                }
                            </p>
                        </div>
                    </div>
                    <h3 class="portfolio-desktop__container-title">"Funkcje tablicowe"</h3>
                    <div class="portfolio-desktop__container-box">
                        <div class="portfolio-desktop__container-box-code">
                            <div
                                class="portfolio-desktop__container-box-code-widow portfolio-desktop__container-box-code-widow--medium">
                                <div class="portfolio-desktop__container-box-code-widow-buttons">
                                    <button data-exit
                                        class="portfolio-desktop__container-box-code-widow-buttons-exit"></button>
                                    <button data-full
                                        class="portfolio-desktop__container-box-code-widow-buttons-full"></button>
                                    <button data-mini
                                        class="portfolio-desktop__container-box-code-widow-buttons-mini"></button>
                                </div>
                                <div class="portfolio-desktop__container-box-code-widow-text">
                                    <p>
                                        <span class="token function">function</span> <span
                                            class="token class">filter</span>( array, callback ) {
                                        <br>
                                        <span class="token space class">let</span> arrayLength = 0
                                        <br>
                                        <span class="token space class">let</span> result = [ ]
                                        <br>
                                        <span class="token space class">const</span> resultArray = array.<span
                                            class="token function">map</span>(callback)
                                        <br>
                                        <span class="token space variable">for</span> ( number <span
                                            class="token tag">of</span> array) {
                                        <br>
                                        <span class="token space-double"> arrayLength++;</span>
                                        <br>
                                        <span class="token space">}</span>
                                        <br>
                                        <span class="token space variable">for</span> ( <span
                                            class="token class">let</span> i = 0 ; i < arrayLength ; i++ ) { <br>
                                            <span class="token space-double variable">if</span> ( resultArray[ i ] ===
                                            <span class="token tag">true</span> ) {
                                            <br>
                                            <span class="token space-triple">result</span>.<span
                                                class="token function">push</span>( array[ i ] )
                                            <br>
                                            <span class="token space-double">}</span>
                                            <br>
                                            <span class="token space"></span>}
                                            <br>
                                            <span class="token space variable">return</span> result
                                            <br>
                                            }
                                            <br>
                                            <span class="token function">function</span> <span
                                                class="token class">length</span>( array ) {
                                            <br>
                                            <span class="token space class">let</span> arrayLength = 0
                                            <br>
                                            <span class="token space variable">for</span> ( index <span
                                                class="token tag">of</span> array) {
                                            <br>
                                            <span class="token space-double"> arrayLength++;</span>
                                            <br>
                                            <span class="token space">}</span>
                                            <br>
                                            <span class="token space variable">return</span> arrayLength
                                            <br>
                                            }
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="portfolio-desktop__container-box-text">
                            <p class="portfolio-desktop__container-box-text-info"> Cel zadania<br>
                                Zaimplementuj w≈Çasne wersje funkcji tablicowych Array.prototype.length oraz
                                Array.prototype.filter, bez wykorzystania tych wbudowanych.
                            </p>
                            <p class="portfolio-desktop__container-box-text-info">Przyk≈Çad:
                                <br>
                                filter([1, 2, 3, 4], isEven); // => [2, 4]
                                <br>
                                length([1, 2, 3, 4]); // => 4
                            </p>
                        </div>
                    </div>
                    <h3 class="portfolio-desktop__container-title">"Szyfr Cezra - zmodyfikowany"</h3>
                    <div class="portfolio-desktop__container-box">
                        <div class="portfolio-desktop__container-box-code">
                            <div
                                class="portfolio-desktop__container-box-code-widow portfolio-desktop__container-box-code-widow--large">
                                <div class="portfolio-desktop__container-box-code-widow-buttons">
                                    <button data-exit
                                        class="portfolio-desktop__container-box-code-widow-buttons-exit"></button>
                                    <button data-full
                                        class="portfolio-desktop__container-box-code-widow-buttons-full"></button>
                                    <button data-mini
                                        class="portfolio-desktop__container-box-code-widow-buttons-mini"></button>
                                </div>
                                <div class="portfolio-desktop__container-box-code-widow-text">
                                    <p>
                                        <span class="token function">function</span> <span
                                            class="token class">caesara13</span>( word, numberOfShifts ) {
                                        <br>
                                        <span class="token space variable">if</span>( word === " " || <span
                                            class="token tag">typeof</span> word !== "string" ){
                                        <br>
                                        <span class="token space-double function">throw new</span> <span
                                            class="token tag">Error</span>(" Podaj Text ")
                                        <br>
                                        <span class="token space">}</span>
                                        <br>
                                        <span class="token space class">let</span> result
                                        <br>
                                        <span class="token space variable">if</span>( word. <span
                                            class="token function">toLocaleLowerCase</span>() === word ) {
                                        <br>
                                        <span class="token space-double class">const</span> alfabet
                                        ='abcdefghijklmnopqrstuvwxyz'
                                        <br>
                                        <span class="token space-double function">createNewWord</span>( word, alfbet,
                                        numberOfShifts)
                                        <br>
                                        <span class="token space">}</span> <span class="token variable">else</span> {
                                        <br>
                                        <span class="token space-double class">const </span> alfabet1 =
                                        'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
                                        <br>
                                        <span class="token space-double function">createNewWord</span>( word, alfbet1,
                                        numberOfShifts)
                                        <br>
                                        <span class="token space">}</span>
                                        <br>
                                        <br>
                                        <span class="token space function">function</span> <span
                                            class="token class">createNewWord</span>
                                        (word, alfabet, number) {
                                        <br>
                                        <span class="token space-double class">const</span> wordArray = word. <span
                                            class="token function">split</span>("")
                                        <br>
                                        <span class="token space-double class">const</span> newArry = [ ]
                                        <br>
                                        <span class="token space-double class">const</span> scoreArray = [ ]
                                        <br>
                                        <span class="token space-double variable">for </span>(<span class="token class">
                                            let</span>
                                        i = 0 ; i < word.<span class="token function">length</span> ; i++ ) {
                                            <br>
                                            <span class="token space-triple">newArry</span>.<span
                                                class="token function">push</span>( alfabet.<span
                                                class="token function">indexOf</span>( wordArray[ i ] ) )
                                            <br>
                                            <span class="token space-double">}</span>
                                            <br>
                                            <span class="token space-double class">const</span> newWordArray =
                                            newArry.<span class="token function">map</span>( item <span
                                                class="token tag"> => </span> ( item + number ) ) % <span
                                                class="token space-double">alfabet.</span>
                                            <span class="token function">length</span>)
                                            <br>
                                            <br>
                                            <span class="token space-double variable">for </span>(<span
                                                class="token class"> let</span>
                                            j = 0 ; j < newWordArray.<span class="token function">length</span> ; j++ )
                                                {
                                                <br>
                                                <span class="token space-triple">scoreArray</span>.<span
                                                    class="token function">push</span>( alfabet.[newWordArray[ j ] ) )
                                                <br>
                                                <span class="token space-double">}</span>
                                                <br>
                                                <span class="token space-double">result</span> = scoreArray.<span
                                                    class="token function">join</span>( " " )
                                                <br>
                                                <span class="token space variable">return</span> result
                                                <br>
                                                <span class="token space">}</span>
                                                <br>
                                                }
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="portfolio-desktop__container-box-text">
                            <p class="portfolio-desktop__container-box-text-info"><br>
                                Stw√≥rz modu≈Ç eksportujƒÖcy z pomocƒÖ ES6 Modules funkcjƒô caesar13. Jako parametr funkcja
                                ta ma
                                przyjmowaƒá ciƒÖg znak√≥w a nastƒôpnie zwracaƒá zaszyfrowany zgodnie z ROT13. Wykorzystaj
                                powy≈ºszy
                                przyk≈Çad dzia≈Çania aby zweryfikowaƒá poprawno≈õƒá Twojej funkcji.
                                Troche pozmienia≈Çem zadanie doda≈Çem mo≈ºliwo≈õƒá wprowazenia liczby przesuniƒôcia.
                            </p>
                            <p class="portfolio-desktop__container-box-text-info">Przyk≈Çad:
                                <br>
                                PRZEPROGRAMOWANI => CEMRCEBTENZBJNAV
                            </p>
                        </div>
                    </div>



                </div>
            </div>
        </selction>





    </main>



    <script type="module" src="../dist/js/script.min.js"></script>
</body>

</html>